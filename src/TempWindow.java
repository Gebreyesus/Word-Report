/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package words;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import words.MyFrame;
/**
 * 
 * @author Beteab Gebru
 */
public class TempWindow extends JFrame {
    
    JButton AnalyseButton = new JButton( "Analyse Text");
    JButton Browse = new JButton( "Browse");
    JTextField InPutText = new JTextField( 100);
    JLabel OutputLabel = new JLabel( "Output File Path");
    JLabel AnalyseBtnLabel = new JLabel( "Click once file is selected:");
    JLabel FileChoose = new JLabel ( "Selct File");
   
    
    public TempWindow() {
        this.setTitle("Word Analysis On File");
        this.setBounds( 600, 400, 650, 450);
        this.getContentPane().setLayout(null);
        this.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE);
        
        this.AnalyseButton.setBounds(20,160, 180, 60);
        this.getContentPane().add( AnalyseButton);
        this.AnalyseButton.addActionListener( new ButtonListener());
        
        this.Browse.setBounds(220, 160, 180, 60);
        this.getContentPane().add(Browse);
        this.Browse.addActionListener( new FileButtonListener());
        
        this.InPutText.setBounds( 200, 40, 100, 30);
        this.getContentPane().add( InPutText);

        this.OutputLabel.setBounds(50, 40, 150, 30);
        this.getContentPane().add( OutputLabel);

        this.AnalyseBtnLabel.setBounds(20, 130, 140, 30);
        this.getContentPane().add( AnalyseBtnLabel);
        
        this.FileChoose.setBounds(220, 130, 180, 30);
        this.getContentPane().add( FileChoose);
        

        

    }
    
    private void theButtonHasBeenPushed() throws FileNotFoundException 
    {
        String[] inputPath = new String[2];
        inputPath[1] = InPutText.getText();
        
        //this.FileChoose.setText(inputPath[1]);
        //Words.main(inputPath);
    }
    
    private class ButtonListener implements ActionListener {
        
        @Override
        public void actionPerformed( ActionEvent e) {
            TempWindow.this.theButtonHasBeenPushed();
        }
    }
    
    private class FileButtonListener implements ActionListener 
    {
        @Override
        public void actionPerformed( ActionEvent e)  
        {
            System.out.println("hit the file button");
            JFileChooser chooser = new JFileChooser();
            chooser.setFileFilter( new FileNameExtensionFilter("TEXT FILES", "txt", "text"));
            //System.out.println("I created the file chooser");
            int chooserSuccess = chooser.showOpenDialog( null);
            //System.out.println("I opended the file chooser, it returned " + chooserSuccess);
            if( chooserSuccess == JFileChooser.APPROVE_OPTION) {
                File chosenFile = chooser.getSelectedFile();
                // Pass this file to your function
                System.out.println("File path chosen " + chosenFile.getAbsolutePath());
                System.out.println("FileName " + chosenFile.getName());
                String[] FileName = new String[2];
                FileName[0] =  chosenFile.getName();// InPutText.getText();
                try 
                {
                    Words.main(FileName);
                } 
                catch (FileNotFoundException ex) 
                {
                    Logger.getLogger(TempWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else 
            {
                System.out.println("You hit cancel");
            }
        }
    }
}

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
